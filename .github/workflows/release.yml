---
name: Build and Push multi-arch Docker image

on:
  release:
    types:
      - released
#      - published

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Set release version
        run: |
          echo "RELEASE_VERSION=$(echo '${{ github.event.release.tag_name }}' | sed -e s/^v//)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker info
        run: docker info
      - name: Docker buildx inspect
        run: docker buildx inspect
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./linux/Dockerfile
          platforms: linux/amd64,linux/arm64/8
          push: true
          tags: gesellix/echo-server:${{ env.RELEASE_VERSION }}
# Not supported by buildx, yet ("Error response from daemon: Windows does not support privileged mode")
# Related: https://github.com/docker/buildx/issues/176
# Related: https://github.com/docker/build-push-action/issues/18
# This might help: https://www.phillipsj.net/posts/building-windows-and-linux-containers-with-github-actions/
#  build-windows:
#    needs:
#      - build-linux
#    runs-on: windows-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Docker info
#        run: docker info
#      - name: Docker buildx inspect
#        run: docker buildx inspect
#      - name: Build image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./windows/Dockerfile
#          platforms: windows/amd64
#          push: true
#          tags: gesellix/echo-server:${{ env.RELEASE_VERSION }}
...
